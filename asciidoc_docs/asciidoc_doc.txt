
NavEditRawHistory
Table of Contents
Paragraphs
Formatted Text
Document Header
Section Titles (Headings)
Include Files
Horizontal Rules and Page Breaks
Lists
Links
Images
Videos
Source Code
More Delimited Blocks
Block Id, Role and Options
Comments
Tables
UI Macros
Attributes and Substitutions
Text Replacement
Escaping Text
Table of Contents (ToC)
Bibliography
Footnotes
Markdown Compatibility
User Manual and Help

AsciiDoc is a lightweight markup language for authoring notes, articles, documentation, books, web pages, slide decks and man pages in plain text. This guide is a quick reference for the common AsciiDoc document and text formatting markup.

These examples focus on the output generated by the HTML backend. AsciiDoc produces complementary output when generating PDF, EPUB, and DocBook.

Most features labeled Asciidoctor only can be made available to the legacy AsciiDoc Python processor by using this AsciiDoc configuration file provided by the Asciidoctor project.

Paragraphs
Normalview result
Paragraphs don't require any special markup in AsciiDoc.
A paragraph is just one or more lines of consecutive text.

To begin a new paragraph, separate it by at least one blank line.
Newlines within a paragraph are not displayed.
Line breaksview result
Rubies are red, +
Topazes are blue.

[%hardbreaks]
Ruby is red.
Java is black.
Literalview result
A normal paragraph.

 A paragraph offset by at least one space becomes a literal paragraph.
 All lines in a literal paragraph must be adjacent.

 A literal paragraph is displayed as preformatted text.
 The text is shown in a fixed-width font.
 Spaces and newlines,
 like the ones in this sentence,
 are preserved.

Another normal paragraph.
Admonitionview result
NOTE: An admonition paragraph draws the reader's attention to
auxiliary information.
Its purpose is determined by the label
at the beginning of the paragraph.

Here are the other built-in admonition types:

TIP: Pro tip...

IMPORTANT: Don't forget...

WARNING: Watch out for...

CAUTION: Ensure that...
You can also create admonition blocks.
Lead paragraphview result
[.lead]
This text will be styled as a lead paragraph (i.e., larger font).
The default Asciidoctor stylesheet automatically styles the first paragraph of the preamble as a lead paragraph.
More Paragraph, Admonition and Literal Block Examples
See these sections in the Asciidoctor User Manual for more information and examples.

Paragraphs

Literal Text and Blocks

Admonitions

Formatted Text
Bold, Italic, and Monospaceview result
*bold phrase* & **char**acter**s**

_italic phrase_ & __char__acter__s__

*_bold italic phrase_* & **__char__**acter**__s__**

`monospace phrase` & ``char``acter``s``

`*monospace bold phrase*` & ``**char**``acter``**s**``

`_monospace italic phrase_` & ``__char__``acter``__s__``

`*_monospace bold italic phrase_*` &
``**__char__**``acter``**__s__**``
Marks and Custom Stylingview result
Werewolves are allergic to #cassia cinnamon#.

Did the werewolves read the [.small]#small print#?

Where did all the [.underline]#cores# run off to?

We need [.line-through]#ten# make that twenty VMs.

[.big]##O##nce upon an infinite loop.
Superscript and Subscriptview result
^super^script phrase

~sub~script phrase
Curved Quotation Marks and Apostrophes (Smart Quotes)view result
"`double curved quotes`"

'`single curved quotes`'

Olaf's desk was a mess.

All of the werewolves`' desks were a mess.

Olaf had been with the company since the `'60s.
More Text Formatting Examples
See these sections in the Asciidoctor User Manual for more information and examples.

Bold and Italic Formatting

Quotation Marks and Apostrophes

Subscript and Superscript

Monospace Formatting

Custom Styling with Attributes

Passthrough Macros

Document Header
A header is optional.
The header may not contain blank lines and must be offset from the content by at least one blank line.
Title only
= My Document's Title

My document provides...
Title and author line
= My Document's Title
Doc Writer <doc.writer@asciidoctor.org>

My document provides...
Asciidoctor allows multiple authors in the author line. Use the semi-colon character to separate each author.
Title, author line and revision line
= My Document's Title
Doc Writer <doc.writer@asciidoctor.org>
v1.0, 2014-01-01

My document provides...
You cannot have a revision line without an author line.
Document header with attributes
= My Document's Title
Doc Writer <doc.writer@asciidoctor.org>
v1.0, 2018-04-11
:toc:
:imagesdir: assets/images
:homepage: https://asciidoctor.org

My document provides...
Section Titles (Headings)
Article doctypeview result
= Document Title (Level 0)

== Level 1 Section Title

=== Level 2 Section Title

==== Level 3 Section Title

===== Level 4 Section Title

====== Level 5 Section Title

== Another Level 1 Section Title
When using the article doctype (the default), you can only have one level-0 section title (i.e., the document title) and it must be in the document header.
The number of equal signs matches the heading level in the HTML output. For example, Section Level 1 becomes an <h2> heading.
Book doctypeview result
= Document Title (Level 0)

== Section Level 1

=== Section Level 2

==== Section Level 3

===== Section Level 4

====== Section Level 5

= Section Level 0
Explicit id
[#primitives-nulls]
== Primitive types and null values
Section anchors and links (Asciidoctor only)
sectanchors
When this document attribute is set, a section icon anchor appears in front of the section title.

sectlinks
When this document attribute is set, the section titles become self-links. This enables a reader to bookmark the section.

Section title anchors depend on the default Asciidoctor stylesheet to render properly.
Include Files
Document parts
= Reference Documentation
Lead Developer

This is documentation for project X.

include::basics.adoc[]

include::installation.adoc[]

include::example.adoc[]
Asciidoctor does not insert blank lines between adjacent include statements to keep the content separated. Be sure to add a blank line in the source document to avoid unexpected results, such as a section title being swallowed.
Include content from a URI
include::https://raw.githubusercontent.com/asciidoctor/asciidoctor/master/README.adoc[]
Including content from a URI is potentially dangerous, so it’s disabled if the safe mode is SECURE or greater. Assuming the safe mode is less than SECURE, you must also set the allow-uri-read attribute to permit Asciidoctor to read content from a URI.
Horizontal Rules and Page Breaks
Horizontal ruleview result
'''
Page break
<<<
Lists
Unordered, basicview result
* Edgar Allen Poe
* Sheri S. Tepper
* Bill Bryson
Unordered, basic (alt)view result
- Edgar Allen Poe
- Sheri S. Tepper
- Bill Bryson
A blank line is required before and after a list to separated it from other blocks.
You can force two adjacent lists apart by inserting a blank line followed by a line comment after the first list. The convention is to use //- as the line comment to provide a hint to other authors that it’s a list divider.
Unordered, max nestingview result
* level 1
** level 2
*** level 3
**** level 4
***** level 5
* level 1
The unordered list marker can be changed using block styles.
Ordered, basicview result
. Step 1
. Step 2
. Step 3
You can choose to include an ordinal in front of each list marker, but they have to be in sequence.
Ordered, nestedview result
. Step 1
. Step 2
.. Step 2a
.. Step 2b
. Step 3
Ordered, max nestingview result
. level 1
.. level 2
... level 3
.... level 4
..... level 5
. level 1
For ordered lists, Asciidoctor supports numeration styles such as lowergreek and decimal-leading-zero.
Checklistview result
* [*] checked
* [x] also checked
* [ ] not checked
*     normal list item
Checklists can use font-based icons and be interactive.
Labeled, single-lineview result
first term:: definition of first term
second term:: definition of second term
Labeled, multi-lineview result
first term::
definition of first term
second term::
definition of second term
Q&Aview result
[qanda]
What is Asciidoctor?::
  An implementation of the AsciiDoc processor in Ruby.
What is the answer to the Ultimate Question?:: 42
Mixedview result
Operating Systems::
  Linux:::
    . Fedora
      * Desktop
    . Ubuntu
      * Desktop
      * Server
  BSD:::
    . FreeBSD
    . NetBSD

Cloud Providers::
  PaaS:::
    . OpenShift
    . CloudBees
  IaaS:::
    . Amazon EC2
    . Rackspace
Lists can be indented. Leading whitespace is not significant.
Complex content in outline listsview result
* Every list item has at least one paragraph of content,
  which may be wrapped, even using a hanging indent.
+
Additional paragraphs or blocks are adjoined by putting
a list continuation on a line adjacent to both blocks.
+
list continuation:: a plus sign (`{plus}`) on a line by itself

* A literal paragraph does not require a list continuation.

 $ gem install asciidoctor

* AsciiDoc lists may contain any complex content.
+
[cols="2", options="header"]
|===
|Application
|Language

|AsciiDoc
|Python

|Asciidoctor
|Ruby
|===
Links
Externalview result
https://asciidoctor.org - automatic!

https://asciidoctor.org[Asciidoctor]

https://github.com/asciidoctor[Asciidoctor @ *GitHub*]
With spaces and special charactersview result
link:++https://example.org/?q=[a b]++[URL with special characters]

link:https://example.org/?q=%5Ba%20b%5D[URL with special characters]
Windows pathview result
link:\\server\share\whitepaper.pdf[Whitepaper]
Relativeview result
link:index.html[Docs]
Email and IRCview result
devel@discuss.arquillian.org

mailto:devel@discuss.arquillian.org[Discuss Arquillian]

mailto:devel-join@discuss.arquillian.org[Subscribe, Subscribe me, I want to join!]

irc://irc.freenode.org/#fedora
Link with attributes (Asciidoctor only)view result
http://discuss.asciidoctor.org[Discuss Asciidoctor, role="external", window="_blank"]

http://discuss.asciidoctor.org[Discuss Asciidoctor^]

https://example.org["Google, Yahoo, Bing^", role="teal"]
Links with attributes (including the subject and body segments on mailto links) are a feature unique to Asciidoctor. To enable them, you must set the linkattrs attribute on the document. When they are enabled, you must quote the link text if it contains a comma.
Inline anchorsview result
[[bookmark-a]]Inline anchors make arbitrary content referenceable.

[#bookmark-b]#Inline anchors can be applied to a phrase like this one.#

anchor:bookmark-c[]Use a cross reference to link to this location.

[[bookmark-d,last paragraph]]The xreflabel attribute will be used as link text in the cross-reference link.
Internal cross referencesview result
See <<paragraphs>> to learn how to write paragraphs.

Learn how to organize the document into <<section-titles,sections>>.
Inter-document cross references (Asciidoctor only)
Refer to <<document-b.adoc#section-b,Section B>> for more information.

See you when you get back from <<document-b#section-b,Section B>>!
Images
Images are resolved relative to the value of the imagesdir document attribute, which is empty by default. You are encouraged to make use of the imagesdir attribute to avoid hard-coding the common path to your images in every image macro.

The imagesdir attribute can be an absolute path, relative path, or base URL. When the image target is a URL or absolute path, the imagesdir prefix is not prepended.

Blockview result
image::sunset.jpg[]

image::sunset.jpg[Sunset]

.A mountain sunset
[#img-sunset]
[caption="Figure 1: ",link=https://www.flickr.com/photos/javh/5448336655]
image::sunset.jpg[Sunset,300,200]

image::https://asciidoctor.org/images/octocat.jpg[GitHub mascot]
Inlineview result
Click image:icons/play.png[Play, title="Play"] to get the party started.

Click image:icons/pause.png[title="Pause"] when you need a break.
Two colons following the image keyword in the macro (i.e., image::) indicates a block image (aka figure), whereas one colon following the image keyword (i.e., image:) indicates an inline image. (All macros follow this pattern). You use an inline image when you need to place the image in a line of text. Otherwise, you should prefer the block form.
Inline image with positioning roleview result
image:sunset.jpg[Sunset,150,150,role="right"] What a beautiful sunset!
There are a variety of attributes available to position and frame images.
Embedded
= Document Title
:data-uri:
When the data-uri attribute is set, all images in the document—​including admonition icons—​are embedded into the document as data URIs.
Instead of declaring the data-uri attribute in the document, you can pass it as a command-line argument using -a data-uri.
Videos
Block
video::video_file.mp4[]

video::video_file.mp4[width=640, start=60, end=140, options=autoplay]
Embedded Youtube video
video::rPQoq7ThGAU[youtube]
Embedded Vimeo video
video::67480300[vimeo]
You can control the video settings using additional attributes and options on the macro.
Source Code
Inline (monospace only)view result
Reference code like `types` or `methods` inline.
Inline (literal)view result
Output literal monospace text such as `+{backtick}+` by
enclosing the text in pluses, then again in backticks.
Literal lineview result
 Indent the line one space to insert a code snippet
Literal blockview result
....
error: The requested operation returned error: 1954 Forbidden search for defensive operations manual
absolutely fatal: operation initiation lost in the dodecahedron of doom
would you like to die again? y/n
....
Listing block with title, no syntax highlightingview result
.Gemfile.lock
----
GEM
  remote: https://rubygems.org/
  specs:
    asciidoctor (1.5.6.1)

PLATFORMS
  ruby

DEPENDENCIES
  asciidoctor (~> 1.5.6.1)
----
Code block with title and syntax highlightingview result
.app.rb
[source,ruby]
----
require 'sinatra'

get '/hi' do
  "Hello World!"
end
----
Code block with calloutsview result
[source,ruby]
----
require 'sinatra' // <1>

get '/hi' do // <2>
  "Hello World!" // <3>
end
----
<1> Library import
<2> URL mapping
<3> HTTP response body
Code block with non-selectable calloutsview result
----
line of code  // <1>
line of code  # <2>
line of code  ;; <3>
----
<1> A callout behind a line comment for C-style languages.
<2> A callout behind a line comment for Ruby, Python, Perl, etc.
<3> A callout behind a line comment for Clojure.
XML code block with a non-selectable calloutview result
[source,xml]
----
<section>
  <title>Section Title</title> <!--1-->
</section>
----
<1> The section title is required.
Code block sourced from file
[source,ruby]
----
include::app.rb[]
----
Code block sourced from file relative to source directory
:sourcedir: src/main/java

[source,java]
----
include::{sourcedir}/org/asciidoctor/Asciidoctor.java[]
----
Strip leading indentation from source
[source,ruby,indent=0]
----
include::lib/document.rb[lines=5..10]
----
When indent is 0, the leading block indent is stripped (tabs are replaced with 4 spaces).

When indent is > 0, the leading block indent is first stripped (tabs are replaced with 4 spaces), then a block is indented by the number of columns equal to this value.

Code block without delimiters (no blank lines)view result
[source,xml]
<meta name="viewport"
  content="width=device-width, initial-scale=1.0">

This is normal content.
Enabling the syntax highlighter
Syntax highlighting is enabled by setting the source-highlighter attribute in the document header or passed as an argument.

:source-highlighter: pygments
The valid options are coderay, highlightjs, prettify, and pygments.

More Delimited Blocks
Sidebarview result
.AsciiDoc history
****
AsciiDoc was first released in Nov 2002 by Stuart Rackham.
It was designed from the start to be a shorthand syntax
for producing professional documents like DocBook and LaTeX.
****
Any block can have a title, positioned above the block. A block title is a line of text that starts with a dot. The dot cannot be followed by a space.
Exampleview result
.Sample document
====
Here's a sample AsciiDoc document:

[listing]
....
= Title of Document
Doc Writer
:toc:

This guide provides...
....

The document header is useful, but not required.
====
Admonitionview result
[NOTE]
====
An admonition block may contain complex content.

.A list
- one
- two
- three

Another paragraph.
====
Admonition and callout icons
Asciidoctor can “draw” icons using Font Awesome and CSS.

To use this feature, set the value of the icons document attribute to font. Asciidoctor will then emit HTML markup that selects an appropriate font character from the Font Awesome font for each admonition block.

Icons can also be used inline and styled.

Blockquoteview result
[quote, Abraham Lincoln, Address delivered at the dedication of the Cemetery at Gettysburg]
____
Four score and seven years ago our fathers brought forth
on this continent a new nation...
____

[quote, Albert Einstein]
A person who never made a mistake never tried anything new.

____
A person who never made a mistake never tried anything new.
____

[quote, Charles Lutwidge Dodgson, 'Mathematician and author, also known as http://en.wikipedia.org/wiki/Lewis_Carroll[Lewis Carroll]']
____
If you don't know where you are going, any road will get you there.
____
Abbreviated blockquote (Asciidoctor only)view result
"I hold it that a little rebellion now and then is a good thing,
and as necessary in the political world as storms in the physical."
-- Thomas Jefferson, Papers of Thomas Jefferson: Volume 11
Air quotes: the best thing since fenced code blocks (Asciidoctor only)view result
[, James Baldwin]
""
Not everything that is faced can be changed.
But nothing can be changed until it is faced.
""
Passthroughview result
++++
<p>
Content in a passthrough block is passed to the output unprocessed.
That means you can include raw HTML, like this embedded Gist:
</p>

<script src="https://gist.github.com/mojavelinux/5333524.js">
</script>
++++
Openview result
--
An open block can be an anonymous container,
or it can masquerade as any other block.
--

[source]
--
puts "I'm a source block!"
--
Custom substitutionsview result
:version: 1.5.6.1

[source,xml,subs="verbatim,attributes"]
----
<dependency>
  <groupId>org.asciidoctor</groupId>
  <artifactId>asciidoctor-java-integration</artifactId>
  <version>{version}</version>
</dependency>
----
Block Id, Role and Options
Traditional (longhand) markup method for assigning block id and role
[[goals]]
[role="incremental"]
* Goal 1
* Goal 2
Shorthand markup method for assigning block id and role (Asciidoctor only)
[#goals.incremental]
* Goal 1
* Goal 2
To specify multiple roles using the shorthand syntax, separate them by dots.

The order of id and role values in the shorthand syntax does not matter.

Traditional (longhand) markup method for assigning quoted text anchor (id) and role
[[free_the_world]][big goal]_free the world_
Shorthand markup method for assigning quoted text anchor (id) and role (Asciidoctor only)
[#free_the_world.big.goal]_free the world_
Role assigned to text enclosed in backticks
[.rolename]`monospace text`
Traditional (longhand) markup method for assigning block options
[options="header,footer,autowidth"]
|===
|Cell A |Cell B
|===
Shorthand markup method for assigning block options (Asciidoctor only)
[%header%footer%autowidth]
|===
|Cell A |Cell B
|===
Comments
Line
// A single-line comment.
Single-line comments can be used to divide elements, such as two adjacent lists.
Block
////
A multi-line comment.

Notice it's a delimited block.
////
Tables
Table with a title, three columns, a header, and two rows of contentview result
.Table Title
|===
|Name of Column 1 |Name of Column 2 |Name of Column 3

|Cell in column 1, row 1
|Cell in column 2, row 1
|Cell in column 3, row 1

|Cell in column 1, row 2
|Cell in column 2, row 2
|Cell in column 3, row 2
|===
Unless the cols attribute is specified, the number of columns is equal to the number of cell separator characters on the first (non-blank) line between the block delimiters.
When a blank line follows the first non-blank line, the cell in the first line get promoted to the table header.
Table with two columns, a header, and two rows of contentview result
[%header,cols=2*]
|===
|Name of Column 1
|Name of Column 2

|Cell in column 1, row 1
|Cell in column 2, row 1

|Cell in column 1, row 2
|Cell in column 2, row 2
|===
The * in the cols attribute is the repeat operator. It means repeat the column specification across the remaining of columns. In this case, we are repeating the default formatting across 2 columns. When the cells in the header are not defined on a single line, you must use the cols attribute to set the number of columns in the table and the %header option (or options=header attribute) to promote the first row to the table header.
Table with three columns, a header, and two rows of contentview result
[cols="1,1,2", options="header"]
.Applications
|===
|Name
|Category
|Description

|Firefox
|Browser
|Mozilla Firefox is an open-source web browser.
It's designed for standards compliance,
performance, portability.

|Arquillian
|Testing
|An innovative and highly extensible testing platform.
Empowers developers to easily create real, automated tests.
|===
In this example, the cols attribute has two functions. It specifies that this table has three columns, and it sets their relative widths.
Table with column containing AsciiDoc contentview result
[cols="2,2,5a"]
|===
|Firefox
|Browser
|Mozilla Firefox is an open-source web browser.

It's designed for:

* standards compliance
* performance
* portability

http://getfirefox.com[Get Firefox]!
|===
Table from CSV dataview result
[%header,format=csv]
|===
Artist,Track,Genre
Baauer,Harlem Shake,Hip Hop
The Lumineers,Ho Hey,Folk Rock
|===
Table from CSV data using shorthand (Asciidoctor only)view result
,===
Artist,Track,Genre

Baauer,Harlem Shake,Hip Hop
,===
Table from CSV data in file
|===
include::customers.csv[]
|===
Table from DSV data using shorthand (Asciidoctor only)view result
:===
Artist:Track:Genre

Robyn:Indestructable:Dance
:===
Table with formatted, aligned and merged cellsview result
[cols="e,m,^,>s", width="25%"]
|===
|1 >s|2 |3 |4
^|5 2.2+^.^|6 .3+<.>m|7
^|8
|9 2+>|10
|===
UI Macros
You must set the experimental attribute in the document header to enable these macros.
Keyboard shortcuts (inline kbd macro)view result
|===
|Shortcut |Purpose

|kbd:[F11]
|Toggle fullscreen

|kbd:[Ctrl+T]
|Open a new tab

|kbd:[Ctrl+Shift+N]
|New incognito window

|kbd:[\ ]
|Used to escape characters

|kbd:[Ctrl+\]]
|Jump to keyword

|kbd:[Ctrl + +]
|Increase zoom
|===
Menu selections (inline menu macro)view result
To save the file, select menu:File[Save].

Select menu:View[Zoom > Reset] to reset the zoom level to the default setting.
Buttons (inline btn macro)view result
Press the btn:[OK] button when you are finished.

Select a file in the file navigator and click btn:[Open].
Attributes and Substitutions
Attribute declaration and usageview result
:url-home: https://asciidoctor.org
:link-docs: https://asciidoctor.org/docs[documentation]
:summary: Asciidoctor is a mature, plain-text document format for \
       writing notes, articles, documentation, books, and more. \
       It's also a text processor & toolchain for translating \
       documents into various output formats (i.e., backends), \
       including HTML, DocBook, PDF and ePub.
:checkedbox: pass:normal[{startsb}&#10004;{endsb}]

Check out {url-home}[Asciidoctor]!

{summary}

Be sure to read the {link-docs} too!

{checkedbox} That's done!
Attribute assignment precedence (highest to lowest)
Attribute passed to the API or CLI that does not end in @

Attribute defined in the document

Attribute passed to the API or CLI that ends in @

Intrinsic attribute value (default values)

To make an attribute value that is passed to the API or CLI have a lower precedence than an assignment in the document, add an @ symbol to the end of the attribute value.
Predefined attributes for character replacements [1][2][3]
Attribute name	Replacement text	Appearance
blank

nothing

empty

nothing

sp

single space

nbsp

&#160;


zwsp[4]

&#8203;
​

wj[5]

&#8288;
⁠

apos

&#39;
'

quot

&#34;
"

lsquo

&#8216;
‘

rsquo

&#8217;
’

ldquo

&#8220;
“

rdquo

&#8221;
”

deg

&#176;
°

plus

&#43;
+

brvbar

&#166;
¦

vbar

|
|

amp

&
&

lt

<
<

gt

>
>

startsb

[
[

endsb

]
]

caret

^
^

asterisk

*
*

tilde

~
~

backslash

\
\

backtick

`
`

two-colons

::
::

two-semicolons

;;
;;

cpp

C++
C++

[1] Some replacements are Unicode characters, whereas others are numeric character references (e.g., &#34;). These character references are used whenever the use of the Unicode character could interfere with the AsciiDoc syntax or confuse the renderer (i.e., the browser). It’s up to the converter to transform the reference into something the renderer understands (something both the man page and PDF converter handle).

[2] Asciidoctor does not prevent you from reassigning predefined attributes. However, it’s best to treat them as read-only unless the output format requires the use of a different encoding scheme. These attributes are an effective tool for decoupling content and presentation.

[3] Asciidoctor allows you to use any of the named character references (aka named entities) defined in HTML (e.g., &euro; resolves to €). However, using named character references can cause problems when generating non-HTML output such as PDF because the lookup table needed to resolve these names may not be defined. Our recommendation is avoid using named character references—​with the exception of those defined in XML (i.e., lt, gt, amp, quot and apos). Instead, use numeric character references (e.g., &#8364;).

[4] The Zero Width Space (ZWSP) is a code point in Unicode that shows where a long word can be split if necessary.

[5] The word joiner (WJ) is a code point in Unicode prevents a line break at its position.

Environment attributes
Attribute	Description	Example Value
asciidoctor

Set if the current processor is Asciidoctor.

asciidoctor-version

Asciidoctor version.

1.5.7.1

backend

Backend used to create the output file.

html5

basebackend

The backend value minus any trailing numbers. For example, if the backend is docbook5, the basebackend is docbook.

html

docdate

Last modified date of the source document.[1,2]

2019-01-04

docdatetime

Last modified date and time of the source document.[1,2]

2019-01-04 19:26:06 GMT+0000

docdir

Full path of the directory that contains the source document.

/home/user/docs

docfile

Full path of the source document.

/home/user/docs/userguide.adoc

docfilesuffix

File extension of the source document, including the leading period. Introduced in 1.5.6.

.adoc

docname

Root name of the source document (no leading path or file extension).

userguide

doctime

Last modified time of the source document.[1,2]

19:26:06 GMT+0000

doctype

Document type (article, book or manpage).

article

docyear

Year that the document was last modified.[1,2]

2018

embedded

Set if content is being converted to an embeddable document (body only).

filetype

File extension of the output file name (without leading period).

html

htmlsyntax

Syntax used when generating the HTML output (html or xhtml).

html

localdate

Date when the document was converted.[2]

2019-02-17

localdatetime

Date and time when the document was converted.[2]

2019-02-17 19:31:05 GMT+0000

localtime

Time when the document was converted.[2]

19:31:05 GMT+0000

localyear

Year when the document was converted.[2]

2018

outdir

Full path of the output directory.

/home/user/docs/dist

outfile

Full path of the output file.

/home/user/docs/dist/userguide.html

outfilesuffix

File extension of the output file (starting with a period) as determined by the backend (.html for html, .xml for docbook, etc.). (The value is not updated to match the file extension of the output file when one is specified explicitly). Safe to modify.

.html

safe-mode-level

Numeric value of the safe mode setting. (UNSAFE=0, SAFE=10, SERVER=10, SECURE=20).

20

safe-mode-name

Textual value of the safe mode setting.

SERVER

safe-mode-unsafe

Set if the safe mode is UNSAFE.

safe-mode-safe

Set if the safe mode is SAFE.

safe-mode-server

Set if the safe mode is SERVER.

safe-mode-secure

Set if the safe mode is SECURE.

user-home

Home directory of the current user. Resolves to . if the safe mode is SERVER or greater.

/home/user

[1] Only reflects the last modified time of the source document file. It does not consider the last modified time of files which are included.

[2] If the SOURCE_DATE_EPOCH environment variable is set, the value assigned to this attribute is built from a UTC date object that corresponds to the timestamp (as an integer) stored in that environment variable. This override offers one way to make the conversion reproducible. See https://reproducible-builds.org/specs/source-date-epoch/ for more information about the SOURCE_DATE_EPOCH environment variable.

Named substitutions
none
Disables substitutions

normal
Performs all substitutions except for callouts

verbatim
Replaces special characters and processes callouts

specialchars, specialcharacters
Replaces <, >, and & with their corresponding entities

quotes
Applies text formatting

attributes
Replaces attribute references

replacements
Substitutes textual and character reference replacements

macros
Processes macros

post_replacements
Replaces the line break character (+)

Counter attributesview result
[caption=""]
.Parts{counter2:index:0}
|===
|Part Id |Description

|PX-{counter:index}
|Description of PX-{index}

|PX-{counter:index}
|Description of PX-{index}
|===
Text Replacement
Textual symbol replacements
Name	Syntax	Unicode Replacement	Rendered	Notes
Copyright

(C)
&#169;
©

Registered

(R)
&#174;
®

Trademark

(TM)
&#8482;
™

Em dash

--
&#8212;
 — 

Only replaced if between two word characters, between a word character and a line boundary, or flanked by spaces.

When flanked by space characters (e.g., a -- b), the normal spaces are replaced by thin spaces (&#8201;).

ellipses

...
&#8230;
…​

right single arrow

->
&#8594;
→

right double arrow

=>
&#8658;
⇒

left single arrow

<-
&#8592;
←

left double arrow

<=
&#8656;
⇐

apostrophe

Sam's
Sam&#8217;s
Sam’s

The vertical form apostrophe is replaced with the curved form apostrophe.

Any named, numeric or hex XML entity reference is supported.
Escaping Text
Backslashview result
\*Stars* is not rendered as bold text.
The asterisks around the word are preserved.

\{author} is not resolved to the author name.
The curly brackets around the word are preserved.

`A\--Z` connects A to Z in monospace using two dashes.
The dashes are not replaced by an em dash.

In these cases, the backslash character is automatically removed.
Passthrough (“plus for passthrough”)view result
`+Text inside {plus} characters+` is not formatted.
However, special characters like +<+ and +>+ are still escaped.
Raw (triple plus and inline pass macro)view result
+++<u>underline me</u>+++ is underlined.

pass:[<u>underline me</u>] is also underlined.
Table of Contents (ToC)
Document with ToC
= AsciiDoc Writer's Guide
Doc Writer <doc.writer@asciidoctor.org>
v1.0, 2013-08-01
:toc:
Document with ToC positioned on the right
= AsciiDoc Writer's Guide
Doc Writer <doc.writer@asciidoctor.org>
v1.0, 2014-08-01
:toc: right
The ToC title, levels, and positioning can be customized.
Bibliography
Bibliography with inbound referencesview result
_The Pragmatic Programmer_ <<pp>> should be required reading for all developers.
To learn all about design patterns, refer to the book by the "`Gang of Four`" <<gof>>.

[bibliography]
== References

- [[[pp]]] Andy Hunt & Dave Thomas. The Pragmatic Programmer:
  From Journeyman to Master. Addison-Wesley. 1999.
- [[[gof,2]]] Erich Gamma, Richard Helm, Ralph Johnson & John Vlissides. Design Patterns:
  Elements of Reusable Object-Oriented Software. Addison-Wesley. 1994.
Footnotes
Normal and reusable footnotesview result
A statement.footnote:[Clarification about this statement.]

A bold statement!footnoteref:[disclaimer,Opinions are my own.]

Another bold statement.footnoteref:[disclaimer]
Markdown Compatibility
Markdown compatible syntax is only available when using Asciidoctor.

Markdown-style headingsview result
# Document Title (Level 0)

## Section Level 1

### Section Level 2

#### Section Level 3

##### Section Level 4

###### Section Level 5
Fenced code block with syntax highlightingview result
```ruby
require 'sinatra'

get '/hi' do
  "Hello World!"
end
```
Markdown-style blockquoteview result
> I hold it that a little rebellion now and then is a good thing,
> and as necessary in the political world as storms in the physical.
> -- Thomas Jefferson, Papers of Thomas Jefferson: Volume 11
Markdown-style blockquote with block contentview result
> > What's new?
>
> I've got Markdown in my AsciiDoc!
>
> > Like what?
>
> * Blockquotes
> * Headings
> * Fenced code blocks
>
> > Is there more?
>
> Yep. AsciiDoc and Markdown share a lot of common syntax already.
Markdown-style horizontal rulesview result
---

- - -

***

* * *
User Manual and Help
To learn more about Asciidoctor and its capabilities, check out the other Asciidoctor guides and its User Manual. Also, don’t forget to join the Asciidoctor mailing list, where you can ask questions and leave comments